// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlhoVivo.Data;

#nullable disable

namespace OlhoVivo.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20240201002954_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lines_BusStop", b =>
                {
                    b.Property<long>("BusStopId")
                        .HasColumnType("bigint");

                    b.Property<long>("FK_BusStopLine_LineId")
                        .HasColumnType("bigint");

                    b.HasKey("BusStopId", "FK_BusStopLine_LineId");

                    b.HasIndex("FK_BusStopLine_LineId");

                    b.ToTable("Lines_BusStop");
                });

            modelBuilder.Entity("OlhoVivo.Models.BusStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_BUSSTOP_NAME")
                        .IsUnique();

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("OlhoVivo.Models.Line", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_lINE_NAME")
                        .IsUnique();

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("OlhoVivo.Models.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.HasIndex(new[] { "Name" }, "IX_VEHICLE_NAME")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("OlhoVivo.Models.VehiclePositions", b =>
                {
                    b.Property<DateTime?>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValue(new DateTime(2024, 2, 1, 0, 29, 54, 470, DateTimeKind.Utc).AddTicks(3858));

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("DateTime", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("PositionVehicles");
                });

            modelBuilder.Entity("Lines_BusStop", b =>
                {
                    b.HasOne("OlhoVivo.Models.BusStop", null)
                        .WithMany()
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BusStopLine_BusStopId");

                    b.HasOne("OlhoVivo.Models.Line", null)
                        .WithMany()
                        .HasForeignKey("FK_BusStopLine_LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OlhoVivo.Models.Vehicle", b =>
                {
                    b.HasOne("OlhoVivo.Models.Line", "Line")
                        .WithMany("Vehicles")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VEHICLE_LINE");

                    b.Navigation("Line");
                });

            modelBuilder.Entity("OlhoVivo.Models.VehiclePositions", b =>
                {
                    b.HasOne("OlhoVivo.Models.Vehicle", "Vehicle")
                        .WithMany("VehiclePositions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VEHICLE_POSITIONS");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OlhoVivo.Models.Line", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("OlhoVivo.Models.Vehicle", b =>
                {
                    b.Navigation("VehiclePositions");
                });
#pragma warning restore 612, 618
        }
    }
}
